name: Integration tests

on: [push, pull_request, pull_request_target]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-18.04
    if: |
        (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
        (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request_target' }}
        with:
          path: swedbank-pay-woocommerce-payments

      - name: Checkout
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          path: swedbank-pay-woocommerce-payments
          ref: ${{ github.event.pull_request.head.sha }}

      - name: WooCommerce Checkout
        uses: actions/checkout@v2
        with:
          repository: woocommerce/woocommerce
          ref: 4.8.0
          path: woocommerce

      - name: Install dependencies
        uses: shivammathur/setup-php@master
        with:
          php-version: '7.3'
          extension: intl, mbstring, json, bcmath
          coverage: xdebug
          tools: composer, php-cs-fixer, phpunit:7.5.19, phpcpd, phpmd

      - name: Set up MySQL
        run: sudo systemctl start mysql.service

      - name: Build WooCommerce Test Enviroment
        run: |
          cd $GITHUB_WORKSPACE/woocommerce
          bash tests/bin/install.sh woocommerce_test root 'root' localhost latest
          zip -q -r /tmp/woocommerce.zip ./
          cd $GITHUB_WORKSPACE/swedbank-pay-woocommerce-payments
          sed -i -e "s/~3.1.0/dev-main/g" ./composer.json
          composer install
          cd ./vendor/swedbank-pay/
          rm -rf ./swedbank-pay-sdk-php
          rm -rf ./swedbank-pay-woocommerce-core
          git clone https://github.com/SwedbankPay/swedbank-pay-sdk-php swedbank-pay-sdk-php
          git clone https://github.com/SwedbankPay/swedbank-pay-woocommerce-core swedbank-pay-woocommerce-core
          cd ../../
          composer dump-autoload
          zip -q -r /tmp/swedbank-pay-woocommerce-payments.zip ./
          cd /tmp/wordpress
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          php wp-cli.phar core config --dbname=woocommerce_test --dbuser=root --dbpass='root' --dbhost=localhost --dbprefix=wp_
          php wp-cli.phar core install --url="http://localhost:8080" --title="Example" --admin_user=admin --admin_password=password --admin_email=info@example.com --path=/tmp/wordpress --skip-email
          php wp-cli.phar plugin install /tmp/woocommerce.zip --activate
          php wp-cli.phar plugin install /tmp/swedbank-pay-woocommerce-payments.zip --activate

      - name: Run tests
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          PAYEE_ID: ${{ secrets.PAYEE_ID }}
          ACCESS_TOKEN_MOBILEPAY: ${{ secrets.ACCESS_TOKEN_MOBILEPAY }}
          PAYEE_ID_MOBILEPAY: ${{ secrets.PAYEE_ID_MOBILEPAY }}
        run: |
          cd $GITHUB_WORKSPACE/swedbank-pay-woocommerce-payments
          WP_TESTS_DIR=/tmp/wordpress-tests-lib WOOCOMMERCE_DIR=$GITHUB_WORKSPACE/woocommerce phpunit --configuration=./tests/phpunit.xml --bootstrap=./tests/bootstrap.php --coverage-clover=coverage.xml

      - name: Run PHPCS inspection
        run: |
          composer global require "wp-coding-standards/wpcs"
          phpcs --config-set installed_paths ~/.composer/vendor/wp-coding-standards/wpcs
          phpcs --standard=WordPress-Core --report=code --ignore=woocommerce,vendors,tests,docs,build,.github,assets/js/*.min.js --runtime-set ignore_warnings_on_exit true ./

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: /tmp/wordpress/wp-content/uploads/wc-logs/*.log

      - name: Upload code coverage report to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
